@page "/State/{state}"

@inject ILoginServices loginService
@inject NavigationManager navigationManager

<div style="position: fixed; top: 0px; left: 0px; width: 100%; height: 100%; z-index: 100; text-align: center; display: flex; flex-direction: column; justify-content: center; align-items: center; ">
    @if (state == "success")
    {
       <div style="display: flex; justify-content: center; align-items: center;">
        <div style="flex-direction: column; padding-top: 100px">
            <div style="text-align: center;">
                <img src="img/icon_success.svg" width="90" style="margin-bottom:1em;"/>
            </div>
            <div style="text-align: center;">
                <p>Validación exitosa</p>
            </div>
        </div>
    </div>
    }
    else
    {
         <div style="display: flex; justify-content: center; align-items: center;">
        <div style="flex-direction: column; padding-top: 100px">
            <div style="text-align: center;">
               <img src="img/icon_advertencia.svg" style="margin: 10px; height: 100px;" />
            </div>
            <div style="text-align: center;">
                <p>Inténtalo nuevamente,</p>
                <br>
                <p>No se pudo validar tu identidad.</p>
                <button @onclick="EventHome">Reintentar</button>
            </div>

        </div>
    </div>
        
        
    }
</div>

@code {
    [Parameter] public string state { get; set; }
    protected override Task OnInitializedAsync()
    {
        loginService.Logout();
        if (string.IsNullOrEmpty(state))
        {
            navigationManager.NavigateTo("500");
        }

        if (!(state == "success" || state == "fail"))
        {
            navigationManager.NavigateTo("404");
        }
        return base.OnInitializedAsync();
    }
     public async Task EventHome()
    {
        navigationManager.NavigateTo("home");
    }
}
