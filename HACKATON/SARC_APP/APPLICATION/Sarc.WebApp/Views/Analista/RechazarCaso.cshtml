@using Sarc.WebApp.Models.Analista
@model RechazarCasoViewModel

@{
    ViewData["Title"] = "Analista/Rechazar Caso";
}

<div class="container-fluid">
    <div class="row gx-4 mb-5">
        <form asp-action="ProcesoRechazoCaso">
            <input type="hidden" asp-for="FechaRegistro" />
            <input type="hidden" asp-for="FuncionarioRegistro" />
            <input type="hidden" asp-for="HoraRegistro" />
            <input type="hidden" asp-for="NroCaso" />
            <input type="hidden" asp-for="Estado" />
            <input type="hidden" asp-for="AntServ" />
            <div class="card bg-bgcontent-dark rounded shadow-sm mb-3">
                <div class="card-header fw-bold">Detalle del Rechazo</div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-sm-8">
                            <label asp-for="ProductoId" class="form-label"></label>
                            <select asp-for="ProductoId" asp-items="Model.ProductoDropDown"
                                    class="form-select form-select-sm">
                                <option selected disabled value="">Elegir...</option>
                            </select>
                            <span asp-validation-for="ProductoId" class="validation-text-danger"></span>
                        </div>

                        <div class="col-sm-4">
                            <label asp-for="TipoServicio" class="form-label"></label>
                            <select asp-for="TipoServicio" class="form-select form-select-sm">
                                <option selected disabled value="">Elegir...</option>
                                <option value="R">RECLAMO</option>
                                <option value="C">CONSULTA</option>
                                <option value="S">SOLICITUD</option>
                            </select>
                            <span asp-validation-for="TipoServicio" class="validation-text-danger"></span>
                        </div>

                        <div class="col-sm-12">
                            <label asp-for="ServicioId" class="form-label"></label>
                            <select asp-for="ServicioId" asp-items="Model.ServicioDropDown"
                                    class="form-select form-select-sm">
                                <option selected value="">Elegir...</option>
                            </select>
                            <span asp-validation-for="ServicioId" class="validation-text-danger"></span>
                        </div>

                        <div class="col-sm-12">
                            <label asp-for="Documentacion" class="form-label"></label>
                            <textarea asp-for="Documentacion" class="form-control form-control-sm" style="height: 70px"
                                      readonly></textarea>
                            <span asp-validation-for="Documentacion" class="validation-text-danger"></span>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-check">
                                <label asp-for="SWErrorReg" class="form-label"></label>
                                <input class="form-check-input" type="checkbox" asp-for="SWErrorReg" value="S">
                                <span asp-validation-for="SWErrorReg" class="validation-text-danger"></span>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <label asp-for="IdRegistroError" class="form-label"></label>
                            <select asp-for="IdRegistroError" asp-items="Model.TipoErrorDropDown"
                                    class="form-select form-select-sm">
                                <option selected disabled value="">Elegir...</option>
                            </select>
                            <span asp-validation-for="IdRegistroError" class="validation-text-danger"></span>
                        </div>

                        <div class="col-sm-12">
                            <label asp-for="DescripcionRegistroError" class="form-label"></label>
                            <textarea asp-for="DescripcionRegistroError" class="form-control form-control-sm" style="height: 50px"></textarea>
                            <span asp-validation-for="DescripcionRegistroError" class="validation-text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-5">
                <div class="col-sm-6">
                    <button class="btn btn-success btn-sm shadow w-100" type="submit">Rechazar</button>
                </div>
                <div class="col-sm-6">
                    <a href="@Url.ActionLink("BandejadeEntrada")"
                       class="btn btn-primary btn-sm shadow w-100">Cancelar</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
         window.onload = function(){
            GetServiciosByProductos();
            GetServiciosByCaso();
            GetDocumentacionByServicio();
            GetDocumentacionByProductos();
        };

        const url = '@Url.Action("GetServicios", "Casos")';
        const urlDocumentacionRequerida = '@Url.Action("GetDocumentacionRequerida", "Casos")';

        function GetServiciosByProductos(){
            $("#ProductoId").change(
                async function(){
                    const caso = $("#TipoRegistro").val();
                    const producto = $("#ProductoId").val();

                    if(caso === null || producto === null){
                        return;
                    }

                    const request = {
                        ProductoId: producto,
                        TipoServicio: caso
                    };

                    const respuesta = await fetch(url,{
                        method: 'POST',
                        body: JSON.stringify(request),
                        headers:{
                            'Content-Type':'application/json'
                        }
                    });

                    const json = await respuesta.json();
                    const options = json.map(s =>
                        `<option value=${s.value}>${s.text}</option>`);
                    $("#ServicioId").html(options);
                    const service = document.getElementById("ServicioId");
                    service.dispatchEvent(new Event('change'));
              })
        }

        function GetServiciosByCaso(){
            $("#TipoServicio").change(
                async function(){
                    const caso = $("#TipoServicio").val();
                    const producto = $("#ProductoId").val();

                     if(caso === null || producto === null){
                        return;
                    }

                    const request = {
                        ProductoId: producto,
                        TipoServicio: caso
                    };
                    const respuesta = await fetch(url,{
                        method: 'POST',
                        body: JSON.stringify(request),
                        headers:{
                            'Content-Type':'application/json'
                        }
                    });
                    const json = await respuesta.json();
                    const options = json.map(s =>
                        `<option value=${s.value}>${s.text}</option>`);
                    $("#ServicioId").html(options);
                    const service = document.getElementById("ServicioId");
                    service.dispatchEvent(new Event('change'));
              })
        }

        function GetDocumentacionByProductos(){
            $("#ProductoId").change(
                async function(){
                   const servicioId = $("#ServicioId").val();
                    const productoId = $("#ProductoId").val();

                    if(productoId === null || servicioId === null){
                        return;
                    }

                    const request = {
                        ProductoId: productoId,
                        ServicioId: servicioId
                    };
                    const respuesta = await fetch(urlDocumentacionRequerida,{
                        method: 'POST',
                        body: JSON.stringify(request),
                        headers:{
                            'Content-Type':'application/json'
                        }
                    });

                    const resp = await respuesta.text();
                    $("#Documentacion").html(resp);
              })
            }

        function GetDocumentacionByServicio(){
            $("#ServicioId").change(
                async function(){
                     const servicioId = $("#ServicioId").val();
                    const productoId = $("#ProductoId").val();

                    if(productoId === null || servicioId === null){
                        return;
                    }

                    const request = {
                        ProductoId: productoId,
                        ServicioId: servicioId
                    };

                    const respuesta = await fetch(urlDocumentacionRequerida,{
                        method: 'POST',
                        body: JSON.stringify(request),
                        headers:{
                            'Content-Type':'application/json'
                        }
                    });
                    const resp = await respuesta.text();
                    $("#Documentacion").html(resp);
              })
        }

    </script>
}